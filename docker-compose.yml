version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped

  backend:
    container_name: fastapi_app
    build: .
    volumes:
      - .:/app  # Монтируем весь проект
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DEEPSEEK_API_KEY=sk-a240c8aa262f4573a31e032ca68f8346
    depends_on:
      - db
      - redis
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - app-network

  worker_llm:
    build: .
    container_name: worker_llm
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DEEPSEEK_API_KEY=sk-a240c8aa262f4573a31e032ca68f8346
    depends_on:
      - redis
      - backend
    command: celery -A app.workers.celery_app worker -Q llm_queue -l INFO
    networks:
      - app-network

  worker_db:
    build: .
    container_name: worker_db
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - redis
      - db
      - backend
    command: celery -A app.workers.celery_app worker -Q db_queue -l INFO
    networks:
      - app-network

  worker_context:
    build: .
    container_name: worker_context
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DEEPSEEK_API_KEY=sk-a240c8aa262f4573a31e032ca68f8346
    depends_on:
      - redis
      - backend
    command: celery -A app.workers.celery_app worker -Q context_queue -l INFO
    networks:
      - app-network

  flower:
    build: .
    container_name: flower
    volumes:
      - .:/app
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - redis
      - worker_llm
      - worker_db
    command: celery -A app.workers.celery_app flower
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 